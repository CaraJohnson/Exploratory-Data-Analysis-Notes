# Week 4 Notes

load("data/samsungData.rda")
names(samsungData)
table(samsungData$activity)

# Plotting Avg accel for 1st subject

par(mfrow=c(1,2),mar=c(5,4,1,1))
samsungData <- transform(samsungData, activity=factor(activity))
sub1 <- subset(samsungData,suject==1)
plot(sub1[,1],col=sub1$activity,ylan=names(sub1)[1])
plot(sub1[,2],col=sub1$activity,ylan=names(sub1)[2])
legend("bottomright",legend=unique(sub1$activity),col=unique(sub1$activity),pch=1)

# Heirarchical clustering based on Avg accel

source("myplclust.R")
hclustering <- hclust(dist(sub1[,1:3]))
myplclust(hclustering, lab.col=unclass(sub1$activity))

# Plotting Max accel for subject 1

par(mfrow=c(1,2))
plot(sub1[,10],pch=19,col=sub1$activity,ylab=names(sub1)[10])
plot(sub1[,11],pch=19,col=sub1$activity,ylab=names(sub1)[11])

# Heirarchical clustering based on Max accel

source("myplclust.R")
hclustering <- hclust(dist(sub1[,10:12]))
myplclust(hclustering, lab.col=unclass(sub1$activity))

# SVD on data set

#plot 1st and 2nd left singular vectors (u)
svd1 <- svd(scale(sub1[,-c(562,563)]))
par(mfrow=c(1,2))
plot(svd1$u[,1],col=sub1$activity,pch=19)
plot(svd1$u[,2],col=sub1$activity,pch=19)

## Find maximum contributor

#plot 2nd right singular vectors (v)
plot(svd1$v[,2],pch=19)

# heirarchical clustering based on max accel and max contributor
maxContrib <- which.max(svd1$v[,2])

distanceMatrix <- dist(sub1[,c(10:12,maxcontrib)])
hclustering <- hclust(distanceMatrix)
myplclust(hclustering,lab.col=unclass(sub1$activity))

#name of max contributor feature (column name)
names(samsungData)[maxContrib]

# k-means clustering (nstart=1, first try)

kClust <- kmeans(sub1[,-c(652,653)],centers=6)
table(kClust$cluster,sub1$activity)

# k-means clustering (nstart=1, second try)

kClust <- kmeans(sub1[,-c(652,653)],centers=6,nstart=1)
table(kClust$cluster,sub1$activity)


# k-means clustering (nstart=100, first try)

kClust <- kmeans(sub1[,-c(652,653)],centers=6,nstart=100)
table(kClust$cluster,sub1$activity)

# k-means clustering (nstart=100, second try)

kClust <- kmeans(sub1[,-c(652,653)],centers=6,nstart=100)
table(kClust$cluster,sub1$activity)




### EPA Air Pollution Case Study

http://aqsdr1.epa.gov/aqsweb/aqstmp/airdata/download_files.html ?????
#download zip files for 1999, 2012 for pm2.5 data

AQS parameter code for PM2.5 = 88101

#want daily or hourly data file???
#can't seem to figure out where to find same files from lecture???


##### Read in 1999 data

pm0 <- read.table("RD_501_88101_1999-0.txt",comment.char="#",header=FALSE,sep="|",na.strings="")
dim(pm0)
# 117421  28
head(pm0)

#need column names, read in 1st line from file

cnames <- readLines("RD_501_88101_1999-0.txt",1)
#returns long string, need to split up
cnames <- strsplit(cnames, "|", fixed=TRUE)
#returns list
names(pm0) <- cnames[[1]]
head(pm0)

#want to remove spaces from names (not valid col names for a data frame), replaces spaces with .
names(pm0) <- make.names(cnames[[1]])
head(pm0)

# pm2.5 values = Sample.Value column

x0 <- pm0$Sample.Value
class(x0)
#numeric
str(x0)
summary(x0)

#find proportion of missing values
mean(is.na(x0))
# 0.11256
# 11% of values are missing


##### Read in 2012 data

pm1 <- read.table("RD_501_88101_2012-0.txt",comment.char="#",header=FALSE,sep="|",na.strings="")

names(pm1) <- make.names(cnames[[1]])
head(pm1)

x1 <- pm1$Sample.Value
str(x1)
mean(is.na(x0))
#5.6% of values missing

# quick comparison on 2012 and 1999 data

summary(x1)
summary(x0)
#looks like median pm2.5 values decreased over time

#visualize
boxplot(x0,x1)
#data very skewed by large values, boxplots not pretty

#cannot take log of negative numbers, log function returns NaNs

#to fix boxplot, take log of values
boxplot(log10(x0),log10(x1))

#observations: median has decreased, but spread has increased (more extreme values) in 2012



##### Notice impossible/incorrect values

# from summary(x1), notice min=-10, negative values are not correct

negative <- x1 < 0
sum(negative, na.rm=TRUE)
#26474 values are negative
mean(negative, na.rm=TRUE)
#only 2.1% of values

#consider if these negative values are a problem

# look at dates
dates <- pm1$Date
str(dates)
#integer vector (format 20120101)

#convert to date format
dates <- as.Date(as.character(dates), "%Y%M%D")
str(dates)
#now in date format

hist(dates,"month")

hist(dates[negative], "month")
#makes histogram of only dates where negative values occur (less occurr in summer months)

#decide not to worry about the negative values right now



##### Look for changes at one monitor (in NY)

site0 <- unique(subset(pm0, State.Code==36,c(County.Code,Site.ID)))
site1 <- unique(subset(pm1, State.Code==36,c(County.Code,Site.ID)))

head(site0)
#lists county code and site ID

site0 <- paste(site0[,1],site0[,2],sep=".")
site1 <- paste(site1[,1],site1[,2],sep=".")

str(site0)
str(site1)
#produces character string of countycode.siteID ex: "1.5"

both <- intersect(site0, site1)
both
# 10 sites common to both 1999 and 2012

#add county.site variable to data sets
pm0$county.site <- with(pm0,paste(County.Code,Site.ID,sep="."))
pm1$county.site <- with(pm1,paste(County.Code,Site.ID,sep="."))

#subset for NY data (state code=36) and site in both years
cnt0 <- subset(pm0,State.Code==36 & county.site %in% both)
cnt1 <- subset(pm1,State.Code==36 & county.site %in% both)

#want to see number of observations in each site
sapply(split(cnt0,cnt0$county.site),nrow)
sapply(split(cnt1,cnt1$county.site),nrow)

#choose county.site=63.2008, which has a good amount of observations in both years
#subset on this site
pm1sub <- subset(pm1,State.Code==36, & County.Code==63 & Site.ID==2008)
pm0sub <- subset(pm0,State.Code==36, & County.Code==63 & Site.ID==2008)

#plot pm2.5 level vs date
dates1 <- pm1sub$Date
x1sub <- pm1sub$Sample.Value
plot(dates1,x1sub)

#convert dates from integer format to date format
dates1 <- as.Date(as.character(dates1),"%Y%m%d")
plot(dates1,x1sub)

#same plot for 1999 data
dates0 <- pm0sub$Date
dates0 <- as.Date(as.character(dates0),"%Y%m%d")
x0sub <- pm0sub$Sample.Value
plot(dates0,x0sub)

#panel plot
par(mfrow=c(1,2),mar=c(4,4,2,1))
plot(dates0,x0sub,pch=20)
abline(h=median(x0sub,na.rm=T))
plot(dates1,x1sub,pch=20)
abline(h=median(x1sub,na.rm=T))

#observation: median looks like has increased, but y axis different between plots, misleading
# use ylim argument to control range of y axis

#find range
rng <- range(x0sub,x1sub,na.rm=T)
#3.0 to 40.1

plot(dates0,x0sub,pch=20,ylim=rng)
abline(h=median(x0sub,na.rm=T))
plot(dates1,x1sub,pch=20,ylim=rng)
abline(h=median(x1sub,na.rm=T))

#observations: better plot, median decr, larger spread in 1999 data so extreme values decr also
#avg levels and spikes both decr



##### Explore change at state level

#use tapply to calculate avg value of pm2.5 by state
mn0 <- with(pm0, tapply(Sample.Value,State.Code,mean,na.rm=T))
str(mn0)
summary(mn0)
mn1 <- with(pm1, tapply(Sample.Value,State.Code,mean,na.rm=T))
summary(mn1)

#create data frame with state and mean pm2.5 value (2 columns)
d0 <- data.frame(state=names(mn0),mean=mn0)
d1 <- data.frame(state=names(mn1),mean=mn1)

#merge d0 and d1 into single data frame, merge on state name
mrg <- merge(d0,d1,by="state")
dim(mrg)
#52 x 3
#state, mean.x, mean.y

par(mfrow=c(1,1))
with(mrg, plot(rep(1999,52), mrg[,2], xlim=c(1998,2013)))
with(mrg, points(rep(2012,52), mrg[,3]))

#want to connect 1999-2012 pts for each state
# use segments(x1,y1,x2,y2)
segments(rep(1999,52),mrg[,2], rep(2012,52),mrg[,3])

#observation: most states pm levels have decr, but some have incr, some very little change
#can fix ylim




















