# Week 3 Swirl Notes

### Swirl Lesson 11 - Heirarchical Clustering

dist(dataFrame)

#0.0815
#10 and 11

hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5,col="blue")
abline(h=0.4,col="red")
#5
#12
abline(h=0.05,col="green")
dist(dFsm)


#tutorial for heatmaps
http://sebastianraschka.com/Articles/heatmaps_in_r.html#clustering

heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt

#Give an idea of the relationships between variables or observations




### Swirl Lesson 12 - K Means Clustering

cmat
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)

#36
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])

tapply(x,newClust,mean)
tapply(y,newClust,mean)

points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
#They will both change clusters
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)

kmeans(dataFrame,centers=3)
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)

plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)



### Swirl Lesson 13 - Dimension Reduction

head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
#no
#no
source("addPatt.R",local=TRUE)
heatmap(dataMatrix)

mat
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))

svd1$v[,1]
svd1$d

head(constantMatrix)
svd2$d
svd2$v[,1:2]
svd2$d

dim(faceData)
#40

a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))

#a face that could launch a 1000 ships

#the principal components of x are:
#the columns of V

#the singular values of x are found where:
#the diagonal elements of D




### Swirl Lesson 14 - Clustering Example

dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
#training
#the number of rows in ssd
sum(table(ssd$subject))
table(ssd$activity)
#the number of rows in ssd

sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[,1:12])

myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))

#passive activities mostly fall below the walking activities

mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))

svd1 <- svd(scale(sub1[,-c(562,563)]))
#left singula vectors  u

dim(svd1$u)

maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist
myplclust(hclustering,lab.col=unclass(sub1$activity))

names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562,563)],centers=6)

#show table of cluster assignments
table(kClust$cluster,sub1$activity)

kClust <- kmeans(sub1[,-c(562,563)],centers=6,nstart=100)
table(kClust$cluster,sub1$activity)

dim(kClust$centers)
laying <- which(kClust$size==29)

plot(kClust$centers[laying,1:12],pch=19,ylab="Laying Cluster")
names(sub1[,1:3])

walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12],pch=19,ylab="Walkdown Cluster")













